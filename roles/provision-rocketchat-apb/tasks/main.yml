##############################################################################
## Provision rocketchat
## This role executes much of the needed functionality to provision an
## application using an Ansible Playbook Bundle.  Included in the comments
## below are some sample resources for getting started deploying an application
## to OpenShift.
##############################################################################

- name: create rocketchat route
  openshift_v1_route:
    name: rocketchat
    namespace: '{{ namespace }}'
    spec_port_target_port: rocketchat-3000
    labels:
      app: rocketchat
      service: rocketchat
    to_name: rocketchat
  register: route

- name: create mongo deployment config
  with_sequence:
    - "count={{ mongodb_replicas }}"
  openshift_v1_deployment_config:
    name: mongo-{{ item }}
    namespace: '{{ namespace }}'
    labels:
      app: mongo-{{ item }}
    replicas: 1
    selector:
      app: mongo-{{ item }}
    spec_template_metadata_labels:
      app: mongo-{{ item }}
    containers:
    - name: db
      env:
      - name: MONGODB_USER
        value: "{{ mongodb_user }}"
      - name: MONGODB_PASSWORD
        value: "{{ mongodb_pass }}"
      - name: MONGODB_DATABASE
        value: "{{ mongodb_name }}"
      - name: MONGODB_ADMIN_PASSWORD
        value: "{{ mongodb_admin_pass }}"
      image: mongo:{{ mongodb_version }}
      name: db
      command: ["mongod"]
      args: ["--storageEngine=mmapv1", "--smallfiles", "--oplogSize", "128", "--replSet", "rs0", "--bind_ip", "0.0.0.0"]
      lifecycle:
        postStart:
          exec:
            command: ["/bin/sh", "-c",  "echo \"$POD_IP mongo-{{ item }}\" >> /etc/hosts"]
      ports:
      - container_port: 27017
        protocol: TCP
        name: mongo-27017
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
    - name: enable-replicaset
      image: geekgonecrazy/mongo-sidecar
      env:
      - name: MONGO_PRIMARY
        value: "mongo-1"
      - name: MONGO_HOST
        value: "mongo-{{ item }}"
      - name: MONGO_DB
        value: "rocketchat"

- name: create rocketchat deployment config
  openshift_v1_deployment_config:
    name: rocketchat
    namespace: '{{ namespace }}'
    labels:
      app: rocketchat
      service: rocketchat
    replicas: "{{ rocketchat_replicas }}"
    selector:
      app: rocketchat
      service: rocketchat
    spec_template_metadata_labels:
      app: rocketchat
      service: rocketchat
    containers:
    - name: rocketchat
      env:
      - name: ROOT_URL
        value: "http://{{ route.route.spec.host }}"
      - name: MONGO_URL
        value: "mongodb://mongo-1:27017/{{ mongodb_name }}?replicaSet=rs0"
      - name: MONGO_OPLOG_URL
        value: "mongodb://mongo-1:27017/local?replicaSet=rs0"
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      image: rocket.chat:{{ rocketchat_version }}
      ports:
      - container_port: 3000
        name: rocketchat-3000
        protocol: TCP

- name: create rocketchat service
  k8s_v1_service:
    name: rocketchat
    namespace: '{{ namespace }}'
    labels:
      app: rocketchat
      service: rocketchat
    selector:
      app: rocketchat
      service: rocketchat
    ports:
      - name: rocketchat-3000
        port: 3000
        target_port: 3000

- name: create mongo service
  with_sequence:
    - "count={{ mongodb_replicas }}"
  k8s_v1_service:
    name: mongo-{{ item }}
    namespace: '{{ namespace }}'
    labels:
      app: mongo-{{ item }}
    selector:
      app: mongo-{{ item }}
    ports:
      - name: mongo-27017
        port: 27017
        target_port: 27017
