##############################################################################
## Provision rocketchat
## This role executes much of the needed functionality to provision an
## application using an Ansible Playbook Bundle.  Included in the comments
## below are some sample resources for getting started deploying an application
## to OpenShift.
##############################################################################

- name: create rocketchat route
  openshift_v1_route:
    name: rocketchat
    namespace: '{{ namespace }}'
    spec_port_target_port: rocketchat-3000
    labels:
      app: rocketchat
      service: rocketchat
    to_name: rocketchat
  register: route

- name: create mongo deployment config
  openshift_v1_deployment_config:
    name: mongo
    namespace: '{{ namespace }}'
    labels:
      app: mongo
      service: mongo
    replicas: 1
    selector:
      app: mongo
      service: mongo
    spec_template_metadata_labels:
      app: mongo
      service: mongo
    containers:
    - name: db
      env:
      - name: MONGODB_USER
        value: "{{ mongodb_user }}"
      - name: MONGODB_PASSWORD
        value: "{{ mongodb_pass }}"
      - name: MONGODB_DATABASE
        value: "{{ mongodb_name }}"
      - name: MONGODB_ADMIN_PASSWORD
        value: "{{ mongodb_admin_pass }}"
      image: mongo:{{ mongodb_version }}
      name: db
      command:
      - mongod
      args: ['--smallfiles', '--oplogSize', '128', '--replSet', 'rs0', '--bind_ip', '0.0.0.0']
      ports:
      - container_port: 27017
        protocol: TCP
        name: mongo-27017
    - name: enable-replicaset
      image: mongo:{{ mongodb_version }}
      command:
      - mongo
      args: ['127.0.0.1/{{ mongodb_name }}', '--eval', '"rs.initiate()"']
      restartPolicy: onFailure

- name: create rocketchat deployment config
  openshift_v1_deployment_config:
    name: rocketchat
    namespace: '{{ namespace }}'
    labels:
      app: rocketchat
      service: rocketchat
    replicas: 1
    selector:
      app: rocketchat
      service: rocketchat
    spec_template_metadata_labels:
      app: rocketchat
      service: rocketchat
    containers:
    - name: rocketchat
      env:
      - name: ROOT_URL
        value: "http://{{ route.route.spec.host }}"
      - name: MONGO_URL
        value: "mongodb://mongo:27017/{{ mongodb_name }}?replicaSet=rs0"
      - name: MONGO_OPLOG_URL
        value: "mongodb://mongo:27017/local?replicaSet=rs0"
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      image: rocket.chat:{{ rocketchat_version }}
      ports:
      - container_port: 3000
        name: rocketchat-3000
        protocol: TCP

- name: create rocketchat service
  k8s_v1_service:
    name: rocketchat
    namespace: '{{ namespace }}'
    labels:
      app: rocketchat
      service: rocketchat
    selector:
      app: rocketchat
      service: rocketchat
    ports:
      - name: rocketchat-3000
        port: 3000
        target_port: 3000

- name: create mongo service
  k8s_v1_service:
    name: mongo
    namespace: '{{ namespace }}'
    labels:
      app: mongo
      service: mongo
    selector:
      app: mongo
      service: mongo
    ports:
      - name: mongo-27017
        port: 27017
        target_port: 27017
